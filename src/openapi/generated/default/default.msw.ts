/*
 * Generated by orval v5.3.0 🍺
 * Do not edit manually.
 * Businesses API
 * Information about businesses
 * OpenAPI spec version: 0.0.1
 */
import { rest } from 'msw';
import faker from 'faker';
import type { Businesses } from '../model/schema-businesses';
import type { Business } from '../model/schema-business';

export const getGetBusinessesMock = () =>
  [
    ...Array(
      faker.datatype.number({
        min: 1,
        max: 10,
      })
    ),
  ].map(() => ({
    name: faker.helpers.randomize([faker.random.word(), undefined]),
    url: faker.helpers.randomize([faker.random.word(), undefined]),
    categories: faker.helpers.randomize([
      [
        ...Array(
          faker.datatype.number({
            min: 1,
            max: 10,
          })
        ),
      ].map(() => ({
        title: faker.helpers.randomize([faker.random.word(), undefined]),
      })),
      undefined,
    ]),
    location: faker.helpers.randomize([
      {
        address1: faker.helpers.randomize([faker.random.word(), undefined]),
        address2: faker.helpers.randomize([faker.random.word(), undefined]),
        address3: faker.helpers.randomize([faker.random.word(), undefined]),
        city: faker.helpers.randomize([faker.random.word(), undefined]),
        state: faker.helpers.randomize([faker.random.word(), undefined]),
        postal_code: faker.helpers.randomize([faker.random.word(), undefined]),
      },
      undefined,
    ]),
    hours: faker.helpers.randomize([
      [
        ...Array(
          faker.datatype.number({
            min: 1,
            max: 10,
          })
        ),
      ].map(() => ({
        hours_type: faker.helpers.randomize([faker.random.word(), undefined]),
      })),
      undefined,
    ]),
  }));

export const getGetBusinessRandomMock = () => ({
  name: faker.helpers.randomize([faker.random.word(), undefined]),
  url: faker.helpers.randomize([faker.random.word(), undefined]),
  categories: faker.helpers.randomize([
    [
      ...Array(
        faker.datatype.number({
          min: 1,
          max: 10,
        })
      ),
    ].map(() => ({
      title: faker.helpers.randomize([faker.random.word(), undefined]),
    })),
    undefined,
  ]),
  location: faker.helpers.randomize([
    {
      address1: faker.helpers.randomize([faker.random.word(), undefined]),
      address2: faker.helpers.randomize([faker.random.word(), undefined]),
      address3: faker.helpers.randomize([faker.random.word(), undefined]),
      city: faker.helpers.randomize([faker.random.word(), undefined]),
      state: faker.helpers.randomize([faker.random.word(), undefined]),
      postal_code: faker.helpers.randomize([faker.random.word(), undefined]),
    },
    undefined,
  ]),
  hours: faker.helpers.randomize([
    [
      ...Array(
        faker.datatype.number({
          min: 1,
          max: 10,
        })
      ),
    ].map(() => ({
      hours_type: faker.helpers.randomize([faker.random.word(), undefined]),
    })),
    undefined,
  ]),
});

export const getDefaultMSW = () => [
  rest.get('*/businesses', (req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, 'Mocked status'),
      ctx.json(getGetBusinessesMock())
    );
  }),
  rest.get('*/business/random', (req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, 'Mocked status'),
      ctx.json(getGetBusinessRandomMock())
    );
  }),
];
