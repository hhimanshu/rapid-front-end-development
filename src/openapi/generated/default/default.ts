/*
 * Generated by orval v5.3.0 üç∫
 * Do not edit manually.
 * Businesses API
 * Information about businesses
 * OpenAPI spec version: 0.0.1
 */
import axios, { AxiosRequestConfig } from 'axios';
import { useQuery, UseQueryOptions } from 'react-query';
import type { Businesses } from '../model/schema-businesses';
import type { Business } from '../model/schema-business';

type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (
  ...args: any
) => Promise<infer R>
  ? R
  : any;

export const getApiBusinesses = <Data = unknown>(
  options?: AxiosRequestConfig
) => {
  return axios.get<Data extends unknown ? Businesses : Data>(
    `/api/businesses`,
    options
  );
};

export const getGetApiBusinessesQueryKey = () => [`/api/businesses`];

export const useGetApiBusinesses = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(options?: {
  query?: UseQueryOptions<AsyncReturnType<typeof getApiBusinesses>, Error>;
  axios?: AxiosRequestConfig;
}) => {
  const queryKey = getGetApiBusinessesQueryKey();
  const { query: queryOptions, axios: axiosOptions } = options || {};

  const query = useQuery<AsyncReturnType<typeof getApiBusinesses>, Error>(
    queryKey,
    () => getApiBusinesses<Data>(axiosOptions),
    queryOptions
  );

  return {
    queryKey,
    ...query,
  };
};

export const getApiBusinessRandom = <Data = unknown>(
  options?: AxiosRequestConfig
) => {
  return axios.get<Data extends unknown ? Business : Data>(
    `/api/business/random`,
    options
  );
};

export const getGetApiBusinessRandomQueryKey = () => [`/api/business/random`];

export const useGetApiBusinessRandom = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(options?: {
  query?: UseQueryOptions<AsyncReturnType<typeof getApiBusinessRandom>, Error>;
  axios?: AxiosRequestConfig;
}) => {
  const queryKey = getGetApiBusinessRandomQueryKey();
  const { query: queryOptions, axios: axiosOptions } = options || {};

  const query = useQuery<AsyncReturnType<typeof getApiBusinessRandom>, Error>(
    queryKey,
    () => getApiBusinessRandom<Data>(axiosOptions),
    queryOptions
  );

  return {
    queryKey,
    ...query,
  };
};
