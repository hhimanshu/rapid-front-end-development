/* tslint:disable */
/* eslint-disable */
/**
 * Businesses API
 * Information about businesses
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';

/**
 *
 * @export
 * @interface Location
 */
export interface Location {
  /**
   * the address1 for the business
   * @type {string}
   * @memberof Location
   */
  address1?: string;
  /**
   * the address2 for the business
   * @type {string}
   * @memberof Location
   */
  address2?: string;
  /**
   * the address3 for the business
   * @type {string}
   * @memberof Location
   */
  address3?: string;
  /**
   * the city for the business
   * @type {string}
   * @memberof Location
   */
  city?: string;
  /**
   * the state where business is located
   * @type {string}
   * @memberof Location
   */
  state?: string;
  /**
   * the postal code for the business
   * @type {string}
   * @memberof Location
   */
  postalCode?: string;
}

export function LocationFromJSON(json: any): Location {
  return LocationFromJSONTyped(json, false);
}

export function LocationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Location {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    address1: !exists(json, 'address1') ? undefined : json['address1'],
    address2: !exists(json, 'address2') ? undefined : json['address2'],
    address3: !exists(json, 'address3') ? undefined : json['address3'],
    city: !exists(json, 'city') ? undefined : json['city'],
    state: !exists(json, 'state') ? undefined : json['state'],
    postalCode: !exists(json, 'postal_code') ? undefined : json['postal_code'],
  };
}

export function LocationToJSON(value?: Location | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    address1: value.address1,
    address2: value.address2,
    address3: value.address3,
    city: value.city,
    state: value.state,
    postal_code: value.postalCode,
  };
}
